name: Assign Unassigned Jira Issues

on:
  schedule:
    - cron: '0 * * * *'  # This runs the workflow every hour
  workflow_dispatch:  # Allows manual triggering of the workflow

jobs:
  assign-issues:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install requests
      run: pip install requests

    - name: Assign unassigned Jira issues
      env:
        JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}
        JIRA_USERNAME: ${{ secrets.JIRA_USERNAME }}
        JIRA_URL: ${{ secrets.JIRA_URL }}
      run: |
        import requests
        from requests.auth import HTTPBasicAuth
        import json

        JIRA_API_TOKEN = '${{ secrets.JIRA_API_TOKEN }}'
        JIRA_USERNAME = '${{ secrets.JIRA_USERNAME }}'
        JIRA_URL = '${{ secrets.JIRA_URL }}'

        auth = HTTPBasicAuth(JIRA_USERNAME, JIRA_API_TOKEN)
        headers = {
            "Accept": "application/json",
            "Content-Type": "application/json"
        }

        # JQL query to find unassigned issues
        jql = 'assignee is EMPTY'
        search_url = f'{JIRA_URL}/rest/api/3/search'

        # Get unassigned issues
        response = requests.get(
            search_url,
            headers=headers,
            auth=auth,
            params={'jql': jql}
        )

        issues = response.json().get('issues', [])

        for issue in issues:
            issue_key = issue['key']
            assign_url = f'{JIRA_URL}/rest/api/3/issue/{issue_key}/assignee'

            payload = json.dumps({
                'name': JIRA_USERNAME
            })

            assign_response = requests.put(
                assign_url,
                headers=headers,
                auth=auth,
                data=payload
            )

            if assign_response.status_code == 204:
                print(f'Successfully assigned issue {issue_key} to {JIRA_USERNAME}')
            else:
                print(f'Failed to assign issue {issue_key}: {assign_response.status_code} {assign_response.text}')
